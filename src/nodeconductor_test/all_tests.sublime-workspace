{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"a",
				"application"
			],
			[
				"time",
				"time_wait_for_application_state	statement"
			],
			[
				"fi",
				"find_elements_by_id	function"
			],
			[
				"cre",
				"create_organization_button	statement"
			],
			[
				"create",
				"create_organization	function"
			],
			[
				"organ",
				"organization_field	statement"
			],
			[
				"cl",
				"click"
			],
			[
				"back_to_list_bu",
				"back_to_list_button"
			],
			[
				"pri",
				"private_settings	module"
			],
			[
				"priva",
				"private_parent	statement"
			],
			[
				"priv",
				"private_parent"
			],
			[
				"asser",
				"assertEqual	function"
			],
			[
				"make",
				"make_screenshot	function"
			],
			[
				"date",
				"datetime	class"
			],
			[
				"sc",
				"screenshots_folder	statement"
			],
			[
				"pr",
				"project_path	statement"
			],
			[
				"x",
				"XPATH	statement"
			],
			[
				"proj",
				"project_name	param"
			],
			[
				"find",
				"find_element_by_css_selector	function"
			],
			[
				"find_elements_by_",
				"find_elements_by_css_selector	function"
			],
			[
				"prov",
				"provider_name	statement"
			],
			[
				"provider",
				"provider_exists	statement"
			],
			[
				"sea",
				"search_time_wait"
			],
			[
				"dele",
				"deletion"
			],
			[
				"Base",
				"BaseSettings	class"
			],
			[
				"clic",
				"click_time_wait	statement"
			],
			[
				"BAse",
				"BaseSettings	class"
			],
			[
				"actions",
				"actions_list	statement"
			],
			[
				"for",
				"force_click	function"
			],
			[
				"trie",
				"tries_left	param"
			],
			[
				"exc",
				"exception	trystmt"
			],
			[
				"exce",
				"exception	statement"
			],
			[
				"Sta",
				"StaleElementReferenceException	class"
			],
			[
				"proje",
				"project_exists	statement"
			],
			[
				"fin",
				"find_element_by_xpath	function"
			],
			[
				"pro",
				"project_name	statement"
			],
			[
				"res",
				"resource_type	forstmt"
			],
			[
				"size",
				"size_name"
			],
			[
				"provider_name_",
				"provider_name_in_resource"
			],
			[
				"find_element_",
				"find_element_by_class_name	function"
			],
			[
				"projected",
				"projected_cost"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "pul",
		"selected_items":
		[
			[
				"pul",
				"Git: Pull"
			],
			[
				"ch",
				"Git: Change Branch"
			],
			[
				"push",
				"Git: Push Current Branch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"new",
				"Git: New Branch"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"git",
				"Git: Track Remote Branch"
			],
			[
				"comit",
				"Git: Commit"
			],
			[
				"cha",
				"Git: Change Branch"
			],
			[
				"n",
				"Git: New Branch"
			],
			[
				"pu",
				"Git: Push Current Branch"
			],
			[
				"pull",
				"Git: Pull Current Branch"
			],
			[
				"ad",
				"Git: Add..."
			],
			[
				"ne",
				"Git: New Branch"
			],
			[
				"co",
				"Git: Commit"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"set git",
				"Set Syntax: Git Commit Message"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"comi",
				"Git: Commit"
			],
			[
				"sta",
				"Git: Status"
			],
			[
				"pus",
				"Git: Push Current Branch"
			],
			[
				"pop",
				"Git: Stash Pop"
			],
			[
				"stas",
				"Git: Stash Changes"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"mer",
				"Git: Merge Branch"
			],
			[
				"new ",
				"Git: New Branch"
			],
			[
				"chan",
				"Git: Change Branch"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 198.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/aws_instance_import_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/openstack_instance_creation_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/gitlab_group_creation_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/digitalocean_droplet_import_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/private_settings.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/helpers.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/organization_balance_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/base.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/mobile_digitalocean_droplet_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/azure_instance_creation_test.py",
		"/home/julia/Projects/jira/example.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/private_settings.py.example",
		"/home/julia/Projects/nodeconductor_tests/README.rst",
		"/home/julia/Projects/nodeconductor_tests/.sublime/shell_example.txt",
		"/home/julia/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/julia/Projects/nodeconductor_tests/requirements.txt",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/mobile_version_do_droplet_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/amazon_instance_import_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/test.py",
		"/home/julia/Projects/nodeconductor_tests/.gitignore",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/org_balance_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/org_balance_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/do_droplet_import_test.py",
		"/home/julia/Projects/nodeconductor_tests/src/mobile_version_test.py",
		"/home/julia/Projects/nodeconductor_tests/screenshots/2015-12-14 22:51:00.490422.png",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/t.html",
		"/home/julia/Projects/practice.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/azure_instance_creation_test2.py",
		"/home/julia/Projects/nodeconductor_tests/src/nodeconductor_test/untitled",
		"/home/julia/Projects/nodeconductor_tests/.sublime/nodeconductor_tests.sublime-project",
		"/home/julia/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/julia/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"login_nodeconductor",
			"back-to-list",
			"_search",
			"actions",
			"driver.switch_to_alert",
			"project_name",
			"ng-model=\"generalSearch\"",
			"providers tab was successfully choosen",
			"application_name_for_project",
			"application_name_for_group",
			"contains",
			"time_wait",
			"wait",
			"	",
			"time",
			"is_in_list",
			"time",
			"time.sleep(8)",
			"time.sleep(15)",
			"time.sleep(5)",
			"time.sleep(10)",
			"time.sleep(2)",
			"time.sleep(5)",
			"time.sleep(10)",
			"path_name",
			"application_name",
			"projected_cost",
			"Projected cost $5.00"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"application_project_name",
			"application_group_name",
			"    ",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "all_tests.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"src/nodeconductor_test/helpers.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 516.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 280.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
